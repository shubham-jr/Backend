// This is your Prisma schema file,

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String  @id @default(auto()) @map("_id") @db.ObjectId
  email          String  @unique
  full_name      String
  company_name   String
  contact_number String
  password       String
  country_code   String
  checkbox       Boolean
}

model Otp {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  otp     String
  user_id String @db.ObjectId
}

model Job {
  id                   String   @id @default(auto()) @map("_id") @db.ObjectId
  user_id              String   @db.ObjectId
  job_title            String?
  city                 String?
  job_type             String?
  Salary_type          String?
  Salary               String?
  date                 String?
  status               Boolean? @default(true)
  job_description      String?
  number_of_applicants Int?     @default(0)
  Branch               String
}

model Free_text {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  question String?
  job_id   String? @db.ObjectId
  user_id  String? @db.ObjectId
}

model Single_choice {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  question String?
  option   String[]
  job_id   String?  @db.ObjectId
  user_id  String?  @db.ObjectId
}

model Multiple_choice {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  question String?
  option   String[]
  job_id   String?  @db.ObjectId
  user_id  String?  @db.ObjectId
}

model employee {
  id               String   @id @default(auto()) @map("_id") @db.ObjectId
  user             String   @db.ObjectId
  empName          String
  empEmail         String
  empPhone         String
  empAddress       String
  empPhoto         String?
  empPdf           String?
  empEduDegree     String
  empDegreeDate    String
  empdatebirth     String
  title            String
  Department       String
  Branch           String
  PayrollGroup     String
  jobType          String
  Visa             String
  VisaExpiry       String
  AvailWorkingDays String[]
  emergencyName    String
  relationship     String
  emergencyMobile  String
  positionTitle    String
  companyName      String
  workFrom         String
  workTo           String
  to               String[]
  from             String[]
  Salary           Int
  Salary_type      String
  Contract_type    String
}

enum Role {
  Annual
  Sick
  Unpaid
}

model schdeule {
  id             String  @id @default(auto()) @map("_id") @db.ObjectId
  user           String  @db.ObjectId
  employee       String  @db.ObjectId
  day            String
  date           String
  from           String?
  to             String?
  break_time     String?
  shift_length   String?
  avg_daily      String?
  avg_daily_cost String?
  shiftcost      String?
  leave          String?
}

model Item {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  user              String  @db.ObjectId
  ItemName          String
  Supplier          String
  InventoryCategory String
  Brand             String
  PackageType       String
  QtyPerPackage     String
  PurchaseWith      String
  PricePerPackage   String
  PackageQty        String
  GstType           String
  ItemCode          String
  ItemPhoto         String?
}

model Apply {
  id                     String   @id @default(auto()) @map("_id") @db.ObjectId
  job_id                 String   @db.ObjectId
  fullName               String
  email                  String
  phoneNo                String
  fullAddress            String
  coverLetter            String
  salary                 String
  salary_type            String
  availbilityWorkingDays String[]
  degree                 String
  degreeDate             String
  visa                   String
  positionTitle          String
  companyName            String
  WorkFrom               String
  workTo                 String
  availbilityStart       String
  to                     String[]
  from                   String[]
  empPhotoLink           String?
  empResumeLink          String?
}

model Free_text_save {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  question_id String @db.ObjectId
  answer      String
  job_id      String @db.ObjectId
}

model Single_choice_save {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  question_id String @db.ObjectId
  answer      String
  job_id      String @db.ObjectId
}

model Multiple_choice_save {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  question_id String   @db.ObjectId
  answer      String[]
  job_id      String   @db.ObjectId
}
